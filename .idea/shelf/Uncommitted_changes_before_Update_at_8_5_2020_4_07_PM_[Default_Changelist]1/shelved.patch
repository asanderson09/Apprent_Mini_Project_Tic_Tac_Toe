Index: src/com/tictactoe/GameFrame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.tictactoe;\r\n\r\nimport java.util.Scanner;\r\n\r\n\r\nclass GameFrame {\r\n    //STATIC VARIABLES\r\n\r\n    //static String playerChoice;  //player must choose either [X || O]\r\n    String defaultName = \"Player\";\r\n\r\n\r\n    /*public static void main(String[] args) {//POSSIBLY TEMP MAIN FOR DEMO RUNS\r\n        GameFrame game1 = new GameFrame();\r\n        Scanner scan = new Scanner(System.in);\r\n        game1.gameIntro(game1,scan);\r\n        game1.playAgain(game1,scan);\r\n        game1.instructions(game1,scan);\r\n\r\n        //TODO GameStart() passed to board AI\r\n\r\n        //TODO Ask the player if they wish to play again or quit Strecth goal\r\n    }*/\r\n\r\n    //INSTANCE VARIABLES\r\n    private static String playerName;\r\n    private static String playerChoice;\r\n\r\n\r\n    //CTORS\r\n    public GameFrame() {\r\n        setPlayerName(defaultName);\r\n    }\r\n\r\n    public GameFrame(String playerName) {\r\n        setPlayerName(playerName);\r\n    }\r\n\r\n    public GameFrame(String playerName, String playerChoice) {\r\n        this();\r\n        setPlayerName(playerChoice);\r\n    }\r\n\r\n    //ASSESSORS\r\n\r\n    public String getPlayerName() {\r\n        return playerName;\r\n    }\r\n\r\n    public void setPlayerName(String name) {\r\n        if (!name.isBlank()) {\r\n            this.defaultName = name;\r\n        }\r\n        else {\r\n            this.defaultName = \"Player\";\r\n        }\r\n    }\r\n\r\n    public String getPlayerChoice() {\r\n        return playerChoice;\r\n    }\r\n\r\n    // validate choice of X or O ignoring Case with player feedback\r\n    public void setPlayerChoice(String playerChoice) {\r\n        boolean isValidPiece;\r\n        Scanner scan = new Scanner(System.in);\r\n        do {\r\n            isValidPiece = (playerChoice.equalsIgnoreCase(\"x\") || playerChoice.equalsIgnoreCase(\"O\"));\r\n            if (isValidPiece) {\r\n                this.playerChoice = playerChoice.toUpperCase();\r\n                System.out.printf(\"\\n%s chose to represent as %s \\n\\n\", defaultName, playerChoice);\r\n            }\r\n            else {\r\n                System.out.println(\"Please choose X or O as your chosen game piece.  \");\r\n                playerChoice = scan.nextLine();\r\n            }\r\n        } while (!isValidPiece);\r\n    }\r\n\r\n    //METHODS\r\n    //default response [Player] if player declines to enter name\r\n    //Give the user the option to choose any name and scan it in\r\n    private void gameIntro(GameFrame game1, Scanner scan) {\r\n        System.out.printf(\"\\nIf you don't want to be called %s, please enter your name. \\n\", defaultName);\r\n        game1.setPlayerName(scan.nextLine()); //nextLine allows a null response to default\r\n    }\r\n\r\n    //do you want to exit (call this after the game ends so they can choose to exit or play a new game\r\n    //playAgain()\r\n    private void playAgain(GameFrame game1, Scanner scan) {\r\n        System.out.printf(\"\\nWelcome %s, Respond exactly with No or N if you don't want to play TIC TAC TOE! \\n\", game1.defaultName);\r\n        String play = scan.nextLine();\r\n        //Ask for a new game start and exit if not interested\r\n        if (play.equalsIgnoreCase(\"n\") || play.equalsIgnoreCase(\"no\")) {\r\n            System.out.printf(\"\\nNo hard feelings %s. Enjoy!\\n\", game1.defaultName);\r\n            System.exit(0);\r\n        } else {\r\n            System.out.printf(\"\\nGood luck on the game! \\n\\n\");\r\n        }\r\n    }\r\n\r\n    //Offer instructions and proceed to offer user to choose mark X or O\r\n    private void instructions(GameFrame game1, Scanner scan) {\r\n        System.out.printf(\"%s, This is important! Respond exactly with Y or Yes if you need a quick Intro on how to TIC TAC TOE! \\n\", game1.defaultName);\r\n        String gameIntro = scan.nextLine();\r\n\r\n        if (gameIntro.equalsIgnoreCase(\"y\") || gameIntro.equalsIgnoreCase(\"YES\")) {\r\n            System.out.printf(\"1. Tic Tac Toe is played on a 3 by 3 grid. \\n\\n\");\r\n            System.out.printf(\"2. The Player can choose mark X or O. The AI bot chooses the remaining mark based on player choice for the duration of the round. \\n\\n\");\r\n            System.out.printf(\"3.The first player or bot that gets 3 marks in a row up, down, across, or diagonally is the winner. \\n\\n\");\r\n            System.out.printf(\"4. If all 9 positions on the grid fill up, then the game ends in a draw. \\n\\n\\n\");\r\n            System.out.printf(\"After reviewing the instructions, its time to choose your mark as X or O \");\r\n        } else {\r\n            System.out.printf(\"\\nSince you need no instruction, lets get right down to choosing your mark X or O. \\n\");\r\n        }\r\n        game1.setPlayerChoice(scan.nextLine());\r\n    }\r\n\r\n    public void init(GameFrame frame, Scanner scan) {\r\n        frame.gameIntro(frame, scan);\r\n        frame.playAgain(frame, scan);\r\n        frame.instructions(frame, scan);\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/com/tictactoe/GameFrame.java	(revision 4ee16e1b78afadb01fed516e1862d50e0d0d47d1)
+++ src/com/tictactoe/GameFrame.java	(date 1596668853169)
@@ -19,7 +19,7 @@
 
         //TODO GameStart() passed to board AI
 
-        //TODO Ask the player if they wish to play again or quit Strecth goal
+        //TODO Ask the player if they wish to play again or quit Stretch goal
     }*/
 
     //INSTANCE VARIABLES
